const Discord = require('discord.js');
const Music = require('discord.js-musicbot-addon');
const client = new Discord.Client();
const config = require('./config.json');
// ihack2712: edit, added a http server.
const Express = require('express')
const App  = Express()
App.use(Express.static(__dirname + '/views'))
App.listen(3000, () => console.log('Server running on port 3000'))

// ihack2712: I don't see any issues in the file,
// wlll you please send me a message of what's wrong
// on discord?
//
// ⌬ iHack#2712

var mlog = client.channels.get('520304126899388437')
var prefix = config.prefix

client.on("messageDelete", messageDelete => {
  let ctime = client.readyTimestamp + client.uptime - messageDelete.createdTimestamp
if (ctime <= 1000) {
  console.log(`A message by ${messageDelete.author.tag}(${messageDelete.author.id}) in ${messageDelete.channel.name} in ${messageDelete.guild.name} got deleted but it was ignored because the message was deleted in ${ctime}ms!
Message: ${messageDelete.content}`)
}
  else{
const embed = new Discord.RichEmbed().setTitle('Message Deleted!').setDescription(`Message: 
${messageDelete.content}`).addField(`Message Details:`, `Message by ${messageDelete.author.tag}(${messageDelete.author.id}) in ${messageDelete.channel.name} in ${messageDelete.guild.name} got deleted`).setColor('RED').setTimestamp().setFooter(`The Message was alive for ${Math.round(ctime /1000)}sec`).setThumbnail('https://cdn.discordapp.com/attachments/519547869909483568/520415850784751619/latest.png');
 client.channels.get('520304126899388437').send(embed)
}});
client.on('messageUpdate', (oldMessage, newMessage) => {
  let ctime = client.readyTimestamp + client.uptime - newMessage.editedTimestamp
  if (ctime <= 1000) return;

else {
  if(newMessage != ''){ 
   const embed = new Discord.RichEmbed().setTitle('Message Editied!').setDescription(`New Message: 
\`${newMessage.content}\``).addField('Old Message:', `\`${oldMessage.content}\``).addField(`Message Details:`, `Message by ${newMessage.author.tag}(${newMessage.author.id}) in ${newMessage.channel.name} in ${newMessage.guild.name} was edited`).setColor('BLUE').setTimestamp().setColor('BLUE').setTimestamp().setFooter(`The Message was unchanged for ${Math.round(ctime /1000)}sec`).setThumbnail('https://images-ext-1.discordapp.net/external/719r1Osmo7wivrqgwv5HQyU23uiOME3U4l7ApOzY7YQ/https/i.imgur.com/1cdcq2H.png');
 client.channels.get('520304126899388437').send(embed)
if(oldMessage == newMessage){
console.log('old message = new message')}
}
}});


client.on('message', message => {
if (message.content.indexOf(config.prefix) !== 0) return;
const args = message.content.slice(prefix.length).trim().split(/ +/g);
  const command = args.shift().toLowerCase();

  if (command === 'reboot') {
    const embed = new Discord.RichEmbed().setTitle('Done.').setDescription(`Restarted in **${Math.floor(client.ping)}**ms`).setColor([255, 0, 255]);
    if (message.author.id !== '517371142508380170') return;
    message.channel.send(embed).then(() => {
      console.log(`${client.user.username} is Rebooting`)
      process.exit(1);
    })
  };
    if (command === 'reboot') {
    const embed = new Discord.RichEmbed().setTitle('Done.').setDescription(`Restarted in **${Math.floor(client.ping)}**ms`).setColor([255, 0, 255]);
    if (message.author.id !== '409844605614424074') return;
    message.channel.send(embed).then(() => {
      process.exit(1);
    })
  };
  
   if (command === 'ping') {
    const embed = new Discord.RichEmbed().setTitle('***__Ping__***').setDescription(`Ping is **${Math.floor(client.ping)}**ms!`).setColor('RANDOM');
    message.channel.send(embed).then(() => {
    })
  };
  
   if (command === 'sprite'){
     const sprite = client.emojis.get('519997585516396544');
     message.delete().catch(O_o=>{}); 
     message.channel.send(`${sprite}`) 
    };
  
  if (message.content === 'no u') {
    const embed = new Discord.RichEmbed().setTitle('***__No U__***').setImage(`https://cdn.discordapp.com/attachments/519326226330943491/520069791445418009/REVERSE_CARD_MEEP.png`);
    message.channel.send(embed).then(() => {
    })
  };
  
   if(command === "say") {
    const sayMessage = args.join(" ");
    message.delete().catch(O_o=>{}); 
    message.channel.send(sayMessage);
  };

  if (command === 'get') {
    var smessage = message
    //gets channel from id
    var qchannel = client.channels.get(`${args[0]}`);
    //gets message from channel with id
    qchannel.fetchMessage(`${args[1]}`)
      .then(message => {
        var qmsg = message
       //creates embed
       var embed = new Discord.RichEmbed()
       .setAuthor(`${qmsg.author.tag}`, `${qmsg.author.avatarURL}`)
       .setColor('FFFFFF')
       .setDescription(`${qmsg.content}`)
       .setFooter(`In ${qmsg.guild.name}, #${qmsg.channel.name}, at ${qmsg.createdAt}`)
       //sends embed
       smessage.channel.send({embed});
     });
  };
  
  if (message.author.id  === '159985870458322944')
if (message.content.startsWith('**PRAISE THE FLAG OF THE MEEP NATION**'))
message.channel.send(':pray:')
  
});


Music.start(client, {
  botPrefix: prefix,
  prefix: prefix,
  maxQueueSize: "100",
  disableLoop: true,
  ownerOverMember: true,
  botOwner: '517371142508380170',
  youtubeKey: process.env.YOUTUBE,
  anyoneCanSkip: false,
  botAdmins: ["216371391358959626", "517371142508380170", "409844605614424074"],
  logging: false,
  anyonecanadjust: false,
  AnyoneCanLeave: false,
  requesterName: true,
  enableQueueStat: true,
  enableAliveMessage: true,
  defVolume: 200,
  checkQueues: true,
  musicPresence: false,
  insertMusic: true,
 help:{
    enabled: true,                    // True/False statement.  // Array of alt names (aliases).
    name: "help"                      // Name of the comma  }
},
  leave:{
    enabled: true,                    // True/False statement.  // Array of alt names (aliases).
    name: "leave",
    alt: ["lve", "leev", "begone"]
}});

client.on("ready", () => {
  console.log(`Bot has started, with ${client.users.size} users, in ${client.channels.size} channels of ${client.guilds.size} guilds.`);
client.user.setActivity(`With ${client.users.size} Friends`)
});

//clean function for eval
function clean(text) {
  if (typeof(text) === "string")
    return text.replace(/`/g, "`" + String.fromCharCode(8203)).replace(/@/g, "@" + String.fromCharCode(8203));
  else
      return text;
}

client.on("message", message => {
  const args = message.content.split(" ").slice(1);
 
  if (message.content.startsWith("?eval")) {
    if(message.author.id !== '517371142508380170') return;
    try {
      const code = args.join(" ");
      let evaled = eval(code);
 
      if (typeof evaled !== "string")
        evaled = require("util").inspect(evaled);
 
      message.channel.send(clean(evaled), {code:"xl"});
    } catch (err) {
      message.channel.send(`\`ERROR\` \`\`\`xl\n${clean(err)}\n\`\`\``);
     }
  }
});

client.on('ready', () => {/*
⢀⡴⠑⡄⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  
⠸⡇⠀⠿⡀⠀⠀⠀⣀⡴⢿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠑⢄⣠⠾⠁⣀⣄⡈⠙⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⢀⡀⠁⠀⠀⠈⠙⠛⠂⠈⣿⣿⣿⣿⣿⠿⡿⢿⣆⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⢀⡾⣁⣀⠀⠴⠂⠙⣗⡀⠀⢻⣿⣿⠭⢤⣴⣦⣤⣹⠀⠀⠀⢀⢴⣶⣆  
⠀⠀⢀⣾⣿⣿⣿⣷⣮⣽⣾⣿⣥⣴⣿⣿⡿⢂⠔⢚⡿⢿⣿⣦⣴⣾⠁⠸⣼⡿  
⠀⢀⡞⠁⠙⠻⠿⠟⠉⠀⠛⢹⣿⣿⣿⣿⣿⣌⢤⣼⣿⣾⣿⡟⠉⠀⠀⠀⠀⠀  
⠀⣾⣷⣶⠇⠀⠀⣤⣄⣀⡀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀  
⠀⠉⠈⠉⠀⠀⢦⡈⢻⣿⣿⣿⣶⣶⣶⣶⣤⣽⡹⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⠀⠉⠲⣽⡻⢿⣿⣿⣿⣿⣿⣿⣷⣜⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣷⣶⣮⣭⣽⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⣀⣀⣈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⠿⠿⠿⠿⠛⠉ 
*/
  client.user.setActivity(choices[Math.floor(Math.random() * choices.length)])
})
setInterval(function(){
      client.user.setActivity(choices[Math.floor(Math.random() * choices.length)]); 
}, 60000);
const choices = ['With Cookies', 'With Cookie', `With Many Friends`, 'With Music', 'With MEEP of Faith']

client.login(process.env.TOKEN);